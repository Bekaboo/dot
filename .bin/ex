#!/usr/bin/env sh
# vim:ft=sh:et:ts=4:sw=4:sts=4:
# Extract files from archive, wisely

# Check if a file/directory does not exist
checkne() {
    if [ -e "$1" ]; then
        echo "Error: '$1' already exists"
        return 1
    fi
    return 0
}

# Check if extracted dir contains only one directory and move it out
# $1: path to the extracted/unzipped dir
flatten_single_dir() {
    extracted_dir=$(realpath "$1")
    sub_dir=""

    for item in "$extracted_dir"/*; do
        # Extracted dir contains file or more than 1 sub-dir
        if [ -d "$sub_dir" ] || [ ! -d "$item" ]; then
            return 1
        fi
        sub_dir=$item
    done
    if [ ! -d "$sub_dir" ]; then
        return 1
    fi

    tmp_dir=$(mktemp -d)
    trap 'rmdir $tmp_dir 2>/dev/null' EXIT INT TERM HUP

    # Move extracted dir to tmp dir to avoid name conflict with sub-dir
    mv "$extracted_dir" "$tmp_dir"
    mv "$tmp_dir/$(basename "$extracted_dir")/$(basename "$sub_dir")" "$(dirname "$extracted_dir")"
}

print_help() {
    # No local in POSIX sh
    scriptname=$(basename "$0")
    cat <<EOF
$scriptname - archive extractor
Usage: $scriptname <file>

Supported formats:
  *.tar.Z    - compressed tar archive
  *.Z        - compressed file
  *.tar.bz2  - bzip2 tar archive
  *.tbz2     - bzip2 tar archive
  *.bz2      - bzip2 file
  *.tar.gz   - gzip tar archive
  *.tgz      - gzip tar archive
  *.gz       - gzip file
  *.tar.xz   - xz tar archive
  *.txz      - xz tar archive
  *.xz       - xz file
  *.tar.lzma - lzma tar archive
  *.lzma     - lzma file
  *.tar.zst  - zstd tar archive
  *.tzst     - zstd tar archive
  *.zst      - zstd file
  *.tar.lz4  - lz4 tar archive
  *.lz4      - lz4 file
  *.rar      - rar archive
  *.tar      - tar archive
  *.zip      - zip archive
  *.7z       - 7-zip archive
EOF
}

main() {
    if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
        print_help
        return 0
    fi

    fname=$1

    if [ ! -f "$fname" ]; then
        echo "'$fname' is not a valid file"
        return 1
    fi

    case "$fname" in
    *.tar.Z)
        froot="${fname%.tar.Z}"
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar xZf "$fname" -C "$froot"
        ;;
    *.Z)
        froot="${fname%.Z}"
        if ! checkne "$froot"; then
            return 1
        fi
        uncompress -c "$fname" >"$froot"
        ;;
    *.tar.bz2 | *.tbz2)
        case "$fname" in
        *.tar.bz2) froot="${fname%.tar.bz2}" ;;
        *.tbz2) froot="${fname%.tbz2}" ;;
        esac
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar xjf "$fname" -C "$froot"
        ;;
    *.bz2)
        froot="${fname%.bz2}"
        if ! checkne "$froot"; then
            return 1
        fi
        bunzip2 -c "$fname" >"$froot"
        ;;
    *.tar.gz | *.tgz)
        case "$fname" in
        *.tar.gz) froot="${fname%.tar.gz}" ;;
        *.tgz) froot="${fname%.tgz}" ;;
        esac
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar xzf "$fname" -C "$froot"
        ;;
    *.gz)
        froot="${fname%.gz}"
        if ! checkne "$froot"; then
            return 1
        fi
        gunzip -c "$fname" >"$froot"
        ;;
    *.tar.xz | *.txz)
        case "$fname" in
        *.tar.xz) froot="${fname%.tar.xz}" ;;
        *.txz) froot="${fname%.txz}" ;;
        esac
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar xJf "$fname" -C "$froot"
        ;;
    *.xz)
        froot="${fname%.xz}"
        if ! checkne "$froot"; then
            return 1
        fi
        unxz -c "$fname" >"$froot"
        ;;
    *.tar.lzma)
        froot="${fname%.tar.lzma}"
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar --lzma -xf "$fname" -C "$froot"
        ;;
    *.lzma)
        froot="${fname%.lzma}"
        if ! checkne "$froot"; then
            return 1
        fi
        unlzma -c "$fname" >"$froot"
        ;;
    *.tar.zst | *.tzst)
        case "$fname" in
        *.tar.zst) froot="${fname%.tar.zst}" ;;
        *.tzst) froot="${fname%.tzst}" ;;
        esac
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar --zstd -xf "$fname" -C "$froot"
        ;;
    *.zst)
        froot="${fname%.zst}"
        if ! checkne "$froot"; then
            return 1
        fi
        zstd -d "$fname" -o "$froot"
        ;;
    *.tar.lz4)
        froot="${fname%.tar.lz4}"
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar --use-compress-program=lz4 -xf "$fname" -C "$froot"
        ;;
    *.lz4)
        froot="${fname%.lz4}"
        if ! checkne "$froot"; then
            return 1
        fi
        lz4 -dc "$fname" >"$froot"
        ;;
    *.rar)
        froot="${fname%.rar}"
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        unrar x "$fname" "$froot"
        ;;
    *.tar)
        froot="${fname%.tar}"
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        tar xf "$fname" -C "$froot"
        ;;
    *.zip)
        froot="${fname%.zip}"
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        unzip "$fname" -d "$froot"
        ;;
    *.7z)
        froot="${fname%.7z}"
        if ! checkne "$froot"; then
            return 1
        fi
        mkdir -p "$froot"
        7z x "$fname" -o"$froot"
        ;;
    *)
        echo "'$fname' cannot be extracted"
        ;;
    esac

    flatten_single_dir "$froot"
    return 0
}

main "$@"
