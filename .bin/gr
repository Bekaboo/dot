#!/usr/bin/env bash
# vim: ft=sh ts=4 sw=4 sts=4 et :
# Find a regex pattern using rg and fzf

has() {
    command -v "$1" >/dev/null 2>&1
}

# $1: search root path
main() {
    local preview_cmd=$(
        has bat && echo 'bat --theme base16 --paging never --style numbers,header-filename --color always {1} --highlight-line {2}' ||
            has batcat && echo 'batcat --theme base16 --paging never --style numbers,header-filename --color always {1} --highlight-line {2}' ||
            has fzf-file-previewer && echo 'fzf-file-previewer {1} {2}' ||
            has cat && echo 'cat {1}'
    )
    local grep_cmd=$(
        has rg && echo "rg --hidden --follow --smart-case --column --line-number --no-heading --color=always " ||
            has grep && echo "grep -i -r -n -H -I --color=always "
    )
    local editor=$(has nvim && echo 'nvim' || has vim && echo 'vim')
    local root_path="$1"
    local regex_query_file="/tmp/rg-fzf-r-$$"
    local fuzzy_query_file="/tmp/rg-fzf-f-$$"
    local output_file="/tmp/rg-fzf-o-$$"
    rm -f "$regex_query_file" "$fuzzy_query_file" "$output_file"
    local initial_query="${*:-}"
    local regex_search_hint=$(printf ":: <\u001b[33;1mctrl-g\u001b[0m> to \u001b[33;1mRegex Search\u001b[0m")
    local fuzzy_search_hint=$(printf ":: <\u001b[33;1mctrl-t\u001b[0m> to \u001b[33;1mFuzzy Search\u001b[0m")
    local regex_prompt=' Rg> '
    local fuzzy_prompt=' Fzf> '
    : | fzf --ansi --disabled --query "$initial_query" \
        --bind "start:reload($grep_cmd {q} "$root_path")+unbind(ctrl-g)" \
        --bind "change:reload:sleep 0.1; $grep_cmd {q} "$root_path"|| true" \
        --bind "ctrl-t:unbind(change,ctrl-t)+change-prompt($fuzzy_prompt)+enable-search+rebind(ctrl-g)+transform-query(echo {q} > "$regex_query_file"; cat "$fuzzy_query_file")+change-header($regex_search_hint)" \
        --bind "ctrl-g:unbind(ctrl-g)+change-prompt($regex_prompt)+disable-search+reload($grep_cmd {q} "$root_path"|| true)+rebind(change,ctrl-t)+transform-query(echo {q} > "$fuzzy_query_file"; cat "$regex_query_file")+change-header($fuzzy_search_hint)" \
        --prompt "$regex_prompt" \
        --delimiter ':' \
        --header "$fuzzy_search_hint" \
        --preview "$preview_cmd" \
        --preview-window '+{2}-6,~1' >"$output_file"
    # Entries in output file: {file}:{line}:{column}:{text}
    # Let vim read the output file as error file and jump to the first error
    if [[ -s "$output_file" ]]; then
        $editor +"cfile $output_file"
    fi
    rm -f "$regex_query_file" "$fuzzy_query_file" "$output_file"
}

main "$@"
