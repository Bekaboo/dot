# tell Tmux that outside terminal supports true color
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',*:Tc'

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set -g mouse on
set -g set-clipboard external
bind -T root MouseUp2Pane paste

# prevent lagging <esc> in vim
set -s escape-time 0

# set prefix to C-e
set-option -g prefix C-c
bind C-c send-prefix
unbind C-b

# set color for status bar
set -g status-style bg=default,fg=white
set -g window-status-activity-style fg=magenta
set -g window-status-bell-style fg=magenta
set -g window-status-current-style fg=white,bold
set -g mode-style fg=black,bg=yellow

# set color for pane border
set -g pane-border-style fg=blue
set -g pane-active-border-style fg=magenta

set -g bell-action none
set -g focus-events on
set -g monitor-activity on
set -g visual-activity off
set -g visual-activity off
set -g -q mouse on
setw -g automatic-rename on

# conceal status bar if only one window is opened
set -g status off
set -g status-position top
set -g status-justify "left"
set -g status-left-length 40
set -g status-right-length 40
set -g status-right "#[fg=white]%Y-%m-%d %H:%M"
set-hook -g client-session-changed "if -F '#{==:#{session_windows},1}' 'set status off' 'set status on'"
set-hook -g window-linked "if -F '#{==:#{session_windows},1}' 'set status off' 'set status on'"
set-hook -g window-unlinked "if -F '#{==:#{session_windows},1}' 'set status off' 'set status on'"

# move panes
bind S command-prompt -p "send pane to:" "join-pane -v -t '%%'"
bind J command-prompt -p "join pane from:" "join-pane -v -s '%%'"

# vim style key bindings
bind s split-window -v -b -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind C-s split-window -v -b -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"
bind x confirm-before kill-window
bind c confirm-before kill-pan
bind n new-window -c "#{pane_current_path}"
bind C-n new-window -c "#{pane_current_path}"
bind N new-session
bind BTab previous-window
bind Tab next-window
bind C-o kill-pane -a
bind o kill-pane -a
bind r rotate-window -D
bind R rotate-window -U
bind = select-layout tiled
bind C-r choose-buffer -Z

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use the vim motion keys to resize panes
bind -r C-h resize-pane -L 2
bind -r C-j resize-pane -D 2
bind -r C-k resize-pane -U 2
bind -r C-l resize-pane -R 2

# integration with tmux.nvim (navigation)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# use vim motion keys while in copy mode
setw -g mode-keys vi

# copy-mode with vim keys
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi i send -X cancel
bind -T copy-mode-vi C-[ send -X cancel
bind p paste-buffer -p

bind u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# replace current session with an existing session
bind-key X \
  confirm-before -p "attach another session and kill current session (#S)? (y/n)" \
  "if-shell \"(($(tmux display -p '#{session_many_attached}') > 0))\" \
    choose-session \
    \"run-shell \\\"tmux choose-session \\\\\\\"switch-client -t '%%'; kill-session -t '$(tmux display -p '#S')'\\\\\\\"\\\"\""
