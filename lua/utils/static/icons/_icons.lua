-- stylua: ignore start
return {
  debug = {
    Breakpoint          = 'B ',
    BreakpointCondition = 'C ',
    BreakpointLog       = 'L ',
    BreakpointRejected  = 'X ',
    StackFrame          = '> ',
    StackFrameCurrent   = '>*',
  },
  diagnostics = {
    DiagnosticSignError = 'E ',
    DiagnosticSignHint  = 'H ',
    DiagnosticSignInfo  = 'I ',
    DiagnosticSignOk    = 'O ',
    DiagnosticSignWarn  = 'W ',
  },
  kinds = {
    Array               = 'Arr ',
    Boolean             = 'Bool ',
    BreakStatement      = 'Brk ',
    Calculator          = 'Calc ',
    Call                = 'Call ',
    CaseStatement       = 'Case ',
    Class               = 'Class ',
    Cmd                 = 'Cmd ',
    Color               = 'Col ',
    Constant            = 'Const ',
    Constructor         = 'Constructor ',
    ContinueStatement   = 'Cont ',
    Copilot             = 'Copilot ',
    Declaration         = 'Decl ',
    Delete              = 'Del ',
    DoStatement         = 'Do ',
    Element             = 'Elem ',
    Enum                = 'Enum ',
    EnumMember          = 'EnumM ',
    Event               = 'Event ',
    Field               = 'Field ',
    File                = 'File ',
    Folder              = 'Dir ',
    ForStatement        = 'For ',
    Format              = 'Fmt ',
    Function            = 'Fn ',
    GitBranch           = 'Git ',
    H1Marker            = 'H1 ',
    H2Marker            = 'H2 ',
    H3Marker            = 'H3 ',
    H4Marker            = 'H4 ',
    H5Marker            = 'H5 ',
    H6Marker            = 'H6 ',
    Identifier          = 'Id ',
    IfStatement         = 'If ',
    Interface           = 'Interface ',
    Keyboard            = 'Key ',
    Keyword             = 'Keyw ',
    Lazy                = 'Lazy ',
    List                = 'List ',
    Log                 = 'Log ',
    Lsp                 = 'Lsp ',
    Macro               = 'Macro ',
    MarkdownH1          = 'H1 ',
    MarkdownH2          = 'H2 ',
    MarkdownH3          = 'H3 ',
    MarkdownH4          = 'H4 ',
    MarkdownH5          = 'H5 ',
    MarkdownH6          = 'H6 ',
    Method              = 'Method ',
    Module              = 'Mod ',
    Namespace           = 'Ns ',
    Neovim              = 'Nvim ',
    Null                = 'Nnull ',
    Number              = 'Num ',
    Object              = 'Obj ',
    Operator            = 'Op ',
    Package             = 'Pkg ',
    Pair                = 'Pair ',
    Property            = 'Prop ',
    Reference           = 'Ref ',
    Regex               = 'Regex ',
    Repeat              = 'Rep ',
    RuleSet             = 'Rule ',
    Scope               = 'Scope ',
    Snippet             = 'Snip ',
    Specifier           = 'Spec ',
    Statement           = 'Stmt ',
    String              = 'Str ',
    Struct              = 'Struct ',
    SwitchStatement     = 'Switch ',
    Terminal            = 'Term ',
    Text                = 'Text ',
    Type                = 'Type ',
    TypeParameter       = 'TypeP ',
    Unit                = 'Unit ',
    Value               = 'Val ',
    Variable            = 'Var ',
    WhileStatement      = 'While ',
  },
  ft = {
    Assembly            = 'A ',
    Bak                 = 'B ',
    Config              = 'C ',
    Cuda                = 'C ',
    Data                = 'D ',
    Desktop             = 'D ',
    Elisp               = 'E ',
    Git                 = 'G ',
    Ipynb               = 'I ',
    Java                = 'J ',
    Lock                = 'L ',
    Lua                 = 'L ',
    Markdown            = 'M ',
    Object              = 'O ',
    Pdf                 = 'P ',
    Raw                 = 'R ',
    Sh                  = 'S ',
    Theme               = 'T ',
    Video               = 'V ',
    Vim                 = 'V ',
    Zip                 = 'Z ',
  },
  ui = {
    AngleDown           = 'v ',
    AngleLeft           = '< ',
    AngleRight          = '> ',
    AngleUp             = '^ ',
    ArrowDown           = '↓ ',
    ArrowLeft           = '← ',
    ArrowLeftRight      = '↔ ',
    ArrowRight          = '→ ',
    ArrowUp             = '↑ ',
    ArrowUpDown         = '↕ ',
    CircleFilled        = '• ',
    CircleOutline       = 'o ',
    Cross               = 'x ',
    Ok                  = 'v ',
    Diamond             = '◆ ',
    Dot                 = '• ',
    DotLarge            = '• ',
    Ellipsis            = '. ',
    GitSignAdd          = '+ ',
    GitSignChange       = '~ ',
    GitSignChangedelete = '= ',
    GitSignDelete       = '- ',
    GitSignTopdelete    = '- ',
    GitSignUntracked    = '+ ',
    Log                 = '= ',
    Pin                 = '* ',
    Play                = '> ',
    Star                = '* ',
    TriangleDown        = '▼ ',
    TriangleLeft        = '◀ ',
    TriangleRight       = '▶ ',
    TriangleUp          = '▲ ',
  },
}
-- stylua: ignore end
