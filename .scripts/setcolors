#!/usr/bin/env bash
# vim: ft=sh ts=4 sw=4 sts=4 et :

CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
DEFAULT_COLOR='nano'

setcolor-alacritty() {
    # $1: name of the colorscheme
    local themes_path="$CONFIG_HOME/alacritty/themes"
    local dark_theme_path="$themes_path/dark.yml"
    local light_theme_path="$themes_path/light.yml"
    # If $1 is empty, only need to ensure symlink to color theme files exists
    if [[ -z "$1" ]]; then
        ensure-slink "$themes_path/$DEFAULT_COLOR-dark.yml" "$dark_theme_path"
        ensure-slink "$themes_path/$DEFAULT_COLOR-light.yml" "$light_theme_path"
    else
        force-slink "$themes_path/$1-dark.yml" "$dark_theme_path"
        force-slink "$themes_path/$1-light.yml" "$light_theme_path"
    fi
    touch "$CONFIG_HOME/alacritty/alacritty.yml" # Reload config
}

setcolor-kitty() {
    # $1: name of the colorscheme
    local themes_path="$CONFIG_HOME/kitty/themes"
    local dark_theme_path="$themes_path/dark.conf"
    local light_theme_path="$themes_path/light.conf"
    # If $1 is empty, only need to ensure symlink to color theme files exists
    if [[ -z "$1" ]]; then
        ensure-slink "$themes_path/$DEFAULT_COLOR-dark.conf" "$dark_theme_path"
        ensure-slink "$themes_path/$DEFAULT_COLOR-light.conf" "$light_theme_path"
    else
        force-slink "$themes_path/$1-dark.conf" "$dark_theme_path"
        force-slink "$themes_path/$1-light.conf" "$light_theme_path"
    fi
    if [[ -n "$(command -v kitty 2>/dev/null)" ]]; then
        for pid in $(pgrep kitty); do
            kill -SIGUSR1 $pid
        done
    fi
}

setcolor-wezterm() {
    # $1: name of the colorscheme
    local themes_path="$CONFIG_HOME/wezterm/colors"
    local dark_theme_path="$themes_path/dark.toml"
    local light_theme_path="$themes_path/light.toml"
    # If $1 is empty, only need to ensure symlink to color theme files exists
    if [[ -z "$1" ]]; then
        ensure-slink "$themes_path/$DEFAULT_COLOR-dark.toml" "$dark_theme_path"
        ensure-slink "$themes_path/$DEFAULT_COLOR-light.toml" "$light_theme_path"
    else
        force-slink "$themes_path/$1-dark.toml" "$dark_theme_path"
        force-slink "$themes_path/$1-light.toml" "$light_theme_path"
    fi
    touch "$CONFIG_HOME/wezterm/wezterm.lua" # Reload config
}

setcolor-highlight() {
    # $1: name of the colorscheme
    local themes_path="$HOME/.highlight/themes"
    local dark_theme_path="$themes_path/dark.theme"
    local light_theme_path="$themes_path/light.theme"
    # If $1 is empty, only need to ensure symlink to color theme files exists
    if [[ -z "$1" ]]; then
        ensure-slink \
            "$themes_path/$DEFAULT_COLOR-dark.theme" "$dark_theme_path"
        ensure-slink \
            "$themes_path/$DEFAULT_COLOR-light.theme" "$light_theme_path"
    else
        force-slink "$themes_path/$1-dark.theme" "$dark_theme_path"
        force-slink "$themes_path/$1-light.theme" "$light_theme_path"
    fi
}

setcolor-nvim() {
    # $1: name of the colorscheme
    if [[ -z "$1" || -z "$(command -v nvim 2>/dev/null)" ]]; then
        return 0
    fi
    # Spawn an nvim instance to write the background to shada file
    nvim --headless --noplugin +"let g:COLORSNAME='$1'" +wshada +quit
    # List of pids to exclude from sending signal
    local excludes
    IFS=, read -r -a excludes <<<"$2"
    # Send signal to running nvim instances to change their background
    for pid in "$(pgrep nvim)"; do
        if [[ ! " ${excludes[*]} " =~ " ${pid} " ]]; then
            kill -USR1 $pid &>/dev/null
        fi
    done
}

switch-profile-colorscheme() {
    # $1: name of the app
    # $2: colorscheme name
    if [[ -z "$(command -v kreadconfig5 2>/dev/null)" || \
            -z "$(command -v kwriteconfig5 2>/dev/null)" ]]; then
        return 1
    fi
    local rc="$CONFIG_HOME/${1}rc"
    local current_profile=$(kreadconfig5 --file "$rc" \
        --group "Desktop Entry" --key "DefaultProfile")
    local current_profile_name=${current_profile%\.profile}
    local new_profile_name=$(echo "$current_profile_name" | \
        sed "s/^[A-Z_][a-z_]*\(.*\)\(Light\|Dark\|light\|dark\)/${2^}\1\2/" | \
        sed "s/^[a-z_]\+\(.*\)\(Light\|Dark\|light\|dark\)/$2\1\2/")
    kwriteconfig5 --file "$rc" \
        --group 'Desktop Entry' \
        --key DefaultProfile "$new_profile_name.profile"
    qdbus-call-service-method "$1" setProfile "$new_profile_name"
}

setcolor-konsole-yakuake() {
    # $1: name of the colorscheme
    if [[ -z "$1" ]]; then
        return 0
    fi
    switch-profile-colorscheme konsole "$1"
    switch-profile-colorscheme yakuake "$1"
}

usage() {
    echo 'Usage: setcolor [<colorscheme>] [--exclude-nvim-processes=<pid1>,<pid2>,...]'
    exit 1
}

main() {
    local color=''
    local exclude_nvim_processes=''
    for arg in "$@"; do
        case "$arg" in
        -h | --help)
            usage
            ;;
        --exclude-nvim-processes=*)
            exclude_nvim_processes="${arg#*=}"
            shift
            ;;
        *)
            color="$arg"
            shift
            ;;
        esac
    done
    setcolor-alacritty "$color"
    setcolor-kitty "$color"
    setcolor-wezterm "$color"
    setcolor-konsole-yakuake "$color"
    setcolor-highlight "$color"
    setcolor-nvim "$color" "$exclude_nvim_processes"
    return 0
}

main "$@"
