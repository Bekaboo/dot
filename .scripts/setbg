#!/usr/bin/env bash
# vim: ft=sh ts=4 sw=4 sts=4 et :

CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"

force_slink() {
    # $1: source path
    # $2: target path
    if [[ -L "$2" ]]; then
        unlink "$2"
    fi
    ln -s "$1" "$2"
}

ensure_slink() {
    # $1: source path
    # $2: target path
    # Conditions:
    # 1. target not exists                              (create new link)
    # 2. target exists
    #     2.1 target is symlink
    #         2.1.1 target is symlink and is broken     (unlink and create new link)
    #         2.1.2 target is symlink and not broken    (keep)
    #     2.2 target is directory                       (keep)
    #     2.3 target is file                            (keep)
    if [[ -e "$2" ]]; then  # case 2.1.2, 2.2, 2.3
        return 0
    fi
    # case 1, 2.1.1
    force_slink "$1" "$2"
}

setbg-alacritty() {
    # $1: 'light' or 'dark'
    local theme_path="$CONFIG_HOME/alacritty/theme.yml"
    # If $1 is empty, only need to ensure symlink to color theme file exists
    if [[ -z "$1" ]]; then
        ensure_slink "$CONFIG_HOME/alacritty/themes/dark.yml" "$theme_path"
    else
        force_slink "$CONFIG_HOME/alacritty/themes/$1.yml" "$theme_path"
    fi
    touch "$CONFIG_HOME/alacritty/alacritty.yml" # Reload config
}

setbg-highlight() {
    # $1: 'light' or 'dark'
    local theme_path="$HOME/.highlight/themes/highlight.theme"
    # If $1 is empty, only need to ensure symlink to color theme file exists
    if [[ -z "$1" ]]; then
        ensure_slink "$HOME/.highlight/themes/dark.theme" "$theme_path"
    else
        force_slink "$HOME/.highlight/themes/$1.theme" "$theme_path"
    fi
}

setbg-nvim() {
    # $1: 'light' or 'dark'
    # $2: comma-separated list of pids to exclude
    if [[ -z "$1" || -z "$(command -v nvim 2>/dev/null)" ]]; then
        return 0
    fi
    # Send signal to running nvim instances to change their background
    local sig="$([[ $1 == 'light' ]] && echo 'USR1' || echo 'WINCH')"
    local nvim_pid_list="$(pgrep nvim)"
    if [[ -z "$nvim_pid_list" ]]; then
        nvim --headless --noplugin +"let g:BACKGROUND='$1'" +wshada +quit
    else
        local excludes
        IFS=, read -r -a excludes <<< "$2"
        for pid in "$nvim_pid_list"; do
            if [[ ! " ${excludes[*]} " =~ " ${pid} " ]]; then
                kill -"$sig" $pid &>/dev/null
            fi
        done
    fi
}

usage() {
    echo 'Usage: setbg [light|dark] [--exclude-nvim-processes=<pid1>,<pid2>,...]'
    exit 1
}

main() {
    local bg=''
    local exclude_nvim_processes=''
    for arg in "$@"; do
        case "$arg" in
            light|dark)
                bg="$arg"
                shift
                ;;
            --exclude-nvim-processes=*)
                exclude_nvim_processes="${arg#*=}"
                shift
                ;;
            *)
                usage
                ;;
        esac
    done
    if [[ -z "$bg" ]]; then
        usage
    fi
    setbg-alacritty "$bg"
    setbg-highlight "$bg"
    setbg-nvim "$bg" "$exclude_nvim_processes"
    return 0
}

main "$@"
