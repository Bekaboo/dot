[http]
	version = HTTP/1.1
[user]
	name = bekaboo
	email = kankefengjing@gmail.com
[init]
	defaultBranch = master
[alias]
	a    = add
	ap   = add -p
	au   = add -u
	aup  = add -up
	b    = branch
	bd   = branch -d
	bdf  = branch -d --force
	bdr  = push -d
	bl   = branch -v
	bs   = bisect
	bsb  = bisect bad
	bsg  = bisect good
	bsr  = bisect reset
	bss  = bisect start
	c    = commit
	ca   = commit --amend
	cl   = clone
	cl1  = clone --depth=1
	cln  = clone --filter=blob:none
	clr  = clone --recursive
	cm   = commit -m
	co   = checkout
	cof  = checkout --force
	com  = "!git show-ref --verify --quiet refs/heads/master && git checkout master || git checkout main"
	comf = "!git show-ref --verify --quiet refs/heads/master && git checkout master --force || git checkout main --force"
	; Checkout specified commit without changing the working tree and branch
	; pointer, aka "soft checkout"
	cos  = "!__git_cos() { git checkout --detach && git reset --soft $1 && git checkout $1; }; __git_cos"
	d    = diff
	ds   = diff --cached
	f    = fetch
	ia   = merge-base --is-ancestor
	l    = log --oneline --graph
	; `$GIT_PREFIX` contains the relative path from repo root to current working
	; directory with trailing slash
	; When no argument is given to `git lc`, use repo root as base path
	; (default behavior) and all files in the repo is counted,
	; else use current shell cwd as base path and only count files in given path
	lc   = "!__git_lc() { git ls-files -z ${1:+\"$GIT_PREFIX$1\"} | xargs -0 wc -l 2>/dev/null; }; __git_lc"
	ls   = ls-files
	m    = merge
	ma   = merge --abort
	mt   = mergetool
	p    = push
	pf   = push --force
	pk   = cherry-pick
	pka  = cherry-pick --abort
	pkc  = cherry-pick --continue
	pl   = pull
	r    = remote
	ra   = remote add
	rb   = rebase
	rba  = rebase --abort
	rbc  = rebase --continue
	rbh  = rebase --onto HEAD
	rbi  = rebase -i
	rbo  = rebase --onto
	rl   = remote -v
	rd   = remote rm
	rrm  = remote rm
	rs   = reset
	rss  = reset --soft
	rsm  = reset --mixed
	rsh  = reset --hard
	rt   = restore
	rtp  = restore -p
	rts  = restore --staged
	rtsp = restore --staged -p
	ru   = remote set-url
	rv   = revert
	s    = stash
	sa   = stash apply
	sb   = stash branch
	sd   = stash drop
	sl   = stash list
	sm   = stash -m
	sp   = stash pop
	ss   = stash --staged
	ssm  = stash --staged -m
	st   = status
	su   = submodule
	sui  = submodule init
	sul  = submodule status
	suu  = submodule update
	sw   = stash show
	swi  = switch
	swc  = switch --create
	swd  = switch --detach
	swo  = switch --orphan
	sww  = stash show -p
	t    = tag
	ta   = tag -a
	td   = tag -d
	tl   = tag -l
	tm   = tag -m
	w    = show --stat
	wa   = log --diff-filter=A
	wc   = log --diff-filter=C
	wd   = log --diff-filter=D
	wm   = log --diff-filter=M
	wp   = log --diff-filter=B
	wr   = log --diff-filter=R
	wt   = log --diff-filter=T
	wu   = log --diff-filter=U
	ww   = show
	wx   = log --diff-filter=X
[merge]
	tool = vimdiff
[mergetool]
	keepBackup = false
[mergetool "vimdiff"]
	cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
[pull]
	rebase = true
[diff]
	algorithm = histogram
	indentHeuristic = true
[filter "vscode-theme"]
	smudge = cat
	clean = sed '/[cC]olorTheme/d'
