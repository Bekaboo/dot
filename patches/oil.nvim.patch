diff --git a/lua/oil/init.lua b/lua/oil/init.lua
index 72e87fc..4650a9c 100644
--- a/lua/oil/init.lua
+++ b/lua/oil/init.lua
@@ -7,7 +7,7 @@ local M = {}
 ---@field parsed_name nil|string
 
 ---@alias oil.EntryType "file"|"directory"|"socket"|"link"|"fifo"
----@alias oil.TextChunk string|string[]
+---@alias oil.TextChunk string|string[]|{ [1]: string, [2]: { [1]: string, [2]: integer, [3]: integer }[] }
 ---@alias oil.CrossAdapterAction "copy"|"move"
 
 ---@class (exact) oil.Adapter
@@ -361,6 +361,19 @@ end
 ---Open oil browser for a directory
 ---@param dir nil|string When nil, open the parent of the current buffer, or the cwd if current buffer is not a file
 M.open = function(dir)
+  -- When `dir` is the parent dir of alternate buffer, switch back
+  -- to alternate buffer and set `dir` to nil so that the cursor
+  -- will be placed on the entry of the alternate buffer when entering
+  -- the oil buffer
+  local buf_alt = vim.fn.bufnr("#")
+  if vim.api.nvim_buf_is_valid(buf_alt) then
+    local bufname_alt = vim.api.nvim_buf_get_name(buf_alt)
+    local stat = vim.uv.fs_stat(bufname_alt)
+    if stat and stat.type == "file" and vim.fs.dirname(bufname_alt) == dir then
+      vim.api.nvim_set_current_buf(buf_alt)
+      dir = nil
+    end
+  end
   local config = require("oil.config")
   local util = require("oil.util")
   local view = require("oil.view")
@@ -816,6 +829,17 @@ local function load_oil_buffer(bufnr)
     util.rename_buffer(bufnr, bufname)
   end
 
+  -- Place cursor on the alternate buffer if we are opening
+  -- the parent directory of the alternate buffer
+  local buf_alt = vim.fn.bufnr("#")
+  if vim.api.nvim_buf_is_valid(buf_alt) then
+    local bufname_alt = vim.api.nvim_buf_get_name(buf_alt)
+    local parent_url, basename = M.get_buffer_parent_url(bufname_alt, true)
+    if basename then
+      view.set_last_cursor(parent_url, basename)
+    end
+  end
+
   local adapter = assert(config.get_adapter_by_scheme(scheme))
 
   if vim.endswith(bufname, "/") then
diff --git a/lua/oil/util.lua b/lua/oil/util.lua
index 027b5db..6649f43 100644
--- a/lua/oil/util.lua
+++ b/lua/oil/util.lua
@@ -302,7 +302,21 @@ M.render_table = function(lines, col_width)
       table.insert(pieces, text)
       local col_end = col + text:len() + 1
       if hl then
-        table.insert(highlights, { hl, #str_lines, col, col_end })
+        if type(hl) == "table" then
+          -- hl has the form { [1]: hl_name, [2]: col_start, [3]: col_end }[]
+          -- Notice that col_start and col_end are relative position inside
+          -- that col, so we need to add the offset to them
+          for _, sub_hl in ipairs(hl) do
+            table.insert(highlights, {
+              sub_hl[1],
+              #str_lines,
+              col + sub_hl[2],
+              col + sub_hl[3],
+            })
+          end
+        else
+          table.insert(highlights, { hl, #str_lines, col, col_end })
+        end
       end
       col = col_end
     end
