From 2e2daa01e130ec29fca882124e7fda8f88565108 Mon Sep 17 00:00:00 2001
From: bekaboo <18127878294@qq.com>
Date: Thu, 15 Jun 2023 00:32:52 -0500
Subject: [PATCH] Fix: try to get completion silently for invalid cmdline
 contents (#101)

---
 lua/cmp_cmdline/init.lua | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

diff --git a/lua/cmp_cmdline/init.lua b/lua/cmp_cmdline/init.lua
index 78bd80d..4e6fc66 100644
--- a/lua/cmp_cmdline/init.lua
+++ b/lua/cmp_cmdline/init.lua
@@ -127,15 +127,18 @@ local definitions = {
 
       local items = {}
       local escaped = cmdline:gsub([[\\]], [[\\\\]]);
-      for _, word_or_item in ipairs(vim.fn.getcompletion(escaped, 'cmdline')) do
-        local word = type(word_or_item) == 'string' and word_or_item or word_or_item.word
-        local item = { label = word }
-        table.insert(items, item)
-        if is_option_name_completion and is_boolean_option(word) then
-          table.insert(items, vim.tbl_deep_extend('force', {}, item, {
-            label = 'no' .. word,
-            filterText = word,
-          }))
+      local completion_ok, completion = pcall(vim.fn.getcompletion, escaped, 'cmdline')
+      if completion_ok then
+        for _, word_or_item in ipairs(completion) do
+          local word = type(word_or_item) == 'string' and word_or_item or word_or_item.word
+          local item = { label = word }
+          table.insert(items, item)
+          if is_option_name_completion and is_boolean_option(word) then
+            table.insert(items, vim.tbl_deep_extend('force', {}, item, {
+              label = 'no' .. word,
+              filterText = word,
+            }))
+          end
         end
       end
       for _, item in ipairs(items) do
-- 
2.41.0

