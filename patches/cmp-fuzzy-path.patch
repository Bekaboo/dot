diff --git a/lua/cmp_fuzzy_path/init.lua b/lua/cmp_fuzzy_path/init.lua
index 5455320..042be1e 100644
--- a/lua/cmp_fuzzy_path/init.lua
+++ b/lua/cmp_fuzzy_path/init.lua
@@ -81,7 +81,15 @@ local function find_pattern(cursor_before_line)
   end
 end
 
+-- Check once if fd is installed, we are not doing it on every completion
+-- for performance reasons
+local fd_executable = vim.fn.executable(defaults.fd_cmd[1]) == 1
+
 source.complete = function(self, params, callback)
+  if not fd_executable then
+    callback({ items = {}, isIncomplete = true })
+    return
+  end
   params.option = vim.tbl_deep_extend('keep', params.option, defaults)
   local is_cmd = (vim.api.nvim_get_mode().mode == 'c')
   local pattern = nil
@@ -94,8 +102,6 @@ source.complete = function(self, params, callback)
     local compltype = vim.fn.getcmdcompltype()
     if compltype == 'file' or compltype == 'dir' then
       pattern = params.context.cursor_before_line:sub(params.offset)
-    else
-      pattern = find_pattern(params.context.cursor_before_line)
     end
   else
     pattern = find_pattern(params.context.cursor_before_line)
@@ -147,12 +153,15 @@ source.complete = function(self, params, callback)
 
   -- indicate that we are searching for files
   callback({ items = { {
-    label = 'Searching...',
+    label = '',
     filterText = filterText,
     data = { path = nil, stat = nil, score = -1000 },
   } }, isIncomplete = true })
   local job
   local job_start = vim.fn.reltime()
+  if self.last_job then
+    vim.fn.jobstop(self.last_job)
+  end
   job = fn.jobstart(cmd, {
     stdout_buffered = false,
     cwd = cwd,
@@ -162,7 +171,7 @@ source.complete = function(self, params, callback)
       end
       if #items == 0 then
         callback({ items = { {
-          label = 'No matches found',
+          label = '',
           filterText = filterText,
           data = { path = nil, stat = nil, score = -1000 },
         } }, isIncomplete = true })
@@ -186,6 +195,9 @@ source.complete = function(self, params, callback)
       for _, item in ipairs(lines) do
         -- remove './' from beginning of line
         item = item:gsub([[^%./]], '')
+        if is_cmd then
+          item = vim.fn.fnameescape(item)
+        end
         if #item > 0 then
           -- if new_pattern is empty, we will get no matches
           local score = nil
