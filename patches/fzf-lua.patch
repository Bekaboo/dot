diff --git a/lua/fzf-lua/core.lua b/lua/fzf-lua/core.lua
index d570276..7eb850c 100644
--- a/lua/fzf-lua/core.lua
+++ b/lua/fzf-lua/core.lua
@@ -10,7 +10,7 @@ local make_entry = require "fzf-lua.make_entry"
 
 local M = {}
 
-local ACTION_DEFINITIONS = {
+M.ACTION_DEFINITIONS = {
   -- list of supported actions with labels to be displayed in the headers
   -- no pos implies an append to header array
   [actions.toggle_ignore]     = { "Disable .gitignore", fn_reload = "Respect .gitignore" },
@@ -748,7 +748,7 @@ M.set_header = function(opts, hdr_tbl)
       hdr_txt_str = "",
       val = function()
         if opts.no_header_i then return end
-        local defs = ACTION_DEFINITIONS
+        local defs = M.ACTION_DEFINITIONS
         local ret = {}
         for k, v in pairs(opts.actions) do
           local action = type(v) == "function" and v or type(v) == "table" and (v.fn or v[1])
@@ -768,7 +768,7 @@ M.set_header = function(opts, hdr_tbl)
             table.insert(t, i)
           end
           t[1] = (opts.header_prefix or ":: ") .. t[1]
-          return table.concat(t, opts.header_separator or "")
+          return table.concat(t, opts.header_separator or "|")
         end)() or nil
       end,
     },
diff --git a/lua/fzf-lua/utils.lua b/lua/fzf-lua/utils.lua
index b9384ac..d6ef90a 100644
--- a/lua/fzf-lua/utils.lua
+++ b/lua/fzf-lua/utils.lua
@@ -445,6 +445,10 @@ end
 function M.hexcol_from_hl(hlgroup, what)
   if not hlgroup or not what then return end
   local hexcol = synIDattr(hlgroup, what)
+  -- some colorschemes set fg=fg/bg or bg=fg/bg
+  if hexcol == "fg" or hexcol == "bg" then
+    return ""
+  end
   if hexcol and not hexcol:match("^#") then
     -- try to acquire the color from the map
     -- some schemes don't capitalize first letter?
